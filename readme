See https://github.com/morenice/ahocorasick
for aho-corasick algorithm


Config sample

/pattern/ {
    # If present, print n lines before the match
    before --num=4

    # If present, print n lines after the match
    after --num=4

    print "found"

    # Search for a sub pattern/
    /pattern/{commands...}

    # If present, skips to the location in the logfile where the match is found
    # No other matching is peformed until the pattern is found
    !skipto/pattern

    # Print format, if it does not exist, print the line
    # ${lineno}  Line number
    # ${offset}  File offset
    # ${match}   Print just the match pattern (which will be the input pattern)
    # ${line:w}  Print the line, max width w
    # ${line:m,n} Print the line columns m through n
    # ${time}    Print the timestamp of the log line.
    $printfmt/${lineno}:${offset}

    # Send output to this file
    file "junk"

    # If present, exit when pattern is found
    exit
}


##################################################################
OrderId {
    /ExecutionReport/ {
        print-er
        print
    }
    /OrderCancelReject/ {
        print-ocr
        print
    }
}

bof {
     print "Start search"
}

eof {
    print "Number of trades: $trade\n"
    print "Number of NOS: $nos\n"
}

/S T A R T/ {
    print
}

/S H U T D O W N/ {
    print
}

/Orderserver is ready/ {
    print
}

/9fbe0-345f-7822/ {
    OrderId
}

/LEADER |/ {
    print "The leader is: $line\n"
}

/xxxx-xxx-xxxxx-xxx/ {
    /EXEC_TYPE_TRADE/ {
        $trade = +1
    }
    /EXEC_TYPE_NOS/ {
        $nos += 1
    }
}
